stages:
  - prebuild
  - build:rpm
  - build:richaclrpm
  - publish_rpm

before_script:
  - export RICHACL_BUILD_ID=${CI_PIPELINE_ID}git${CI_COMMIT_SHA:0:8}
  - echo "Exporting RICHACL_BUILD_ID=${RICHACL_BUILD_ID}"
  - test -n "${CI_COMMIT_TAG}" && export TAG_MAJOR=$(echo ${CI_COMMIT_TAG} | sed -e 's/^v//;s/\([^_]\+\)_\([^_]\+\)_.*/\1.\2/')
  - test -n "${CI_COMMIT_TAG}" && export TAG_MINOR=$(echo ${CI_COMMIT_TAG} | sed -e 's/^v//;s/\([^_]\+\)_\([^_]\+\)_//;s/_/./')

variables:
  SAMBAVERSION: "4.13.7"    # also supported "4.11" and "4.12"


## Pre-builds ##


# Use the docker image coming out from this stage as an input base image for the build stages
.prebuid-template: &prebuild-template_definition
  stage: prebuild
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export DESTINATION="gitlab-registry.cern.ch/dss/samba-richacl/prebuild-${PREBUILD_NAME}"
    - export DOCKERFILE="$CI_PROJECT_DIR/gitlab-ci/prebuild-${PREBUILD_NAME}.Dockerfile"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --cache="false" --destination $DESTINATION --dockerfile $DOCKERFILE --context $CI_PROJECT_DIR
  only:
    variables:
      - $PREBUILD_TRIGGER


prebuild-c8:
  <<: *prebuild-template_definition
  variables:
    PREBUILD_NAME: c8


## Builds ##

# SRPM and RPM
samba_rpm:
  stage: build:rpm
  image: gitlab-registry.cern.ch/dss/samba-richacl/prebuild-c8
  script:
    - if [ -z "${CI_COMMIT_TAG}" ]; then echo "This is not a tagged commit, forcing version to $SAMBAVERSION"; else export SAMBAVERSION=${CI_COMMIT_TAG}; echo "Building $SAMBAVERSION"; fi
    - if [ -d cache/samba-$SAMBAVERSION ]; then echo "Found cache, skipping build"; exit 0; fi
    - mkdir -p ~/rpmbuild/{SOURCES,SPECS} RPMS
    - bash -x ./samba_richacl_build.sh samba-$SAMBAVERSION tgz
    - rpmbuild -bb ~/rpmbuild/SPECS/samba.spec
    - cp ~/rpmbuild/SRPMS/*.src.rpm ~/rpmbuild/RPMS/x86_64/*rpm ~/rpmbuild/RPMS/noarch/*rpm RPMS
    - cp -r ~/rpmbuild/BUILD/* cache/
    - ls -l cache/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - cache/
  artifacts:
    expire_in: 7 days
    paths:
      - RPMS
  tags:
    - docker_node

richacl_rpm:
  stage: build:richaclrpm
  image: gitlab-registry.cern.ch/dss/samba-richacl/prebuild-c8
  script:
    - if [ -z "${CI_COMMIT_TAG}" ]; then echo "This is not a tagged commit, forcing version to $SAMBAVERSION"; else export SAMBAVERSION=${CI_COMMIT_TAG}; echo "Building RichACL for $SAMBAVERSION"; fi
    - if ! [ -d cache/samba-$SAMBAVERSION ]; then echo "Invalid cache"; ls -l cache/; exit -1; fi
    - mkdir -p ~/rpmbuild/{SOURCES,SPECS,BUILD} RPMS
    - cp -r cache/samba-$SAMBAVERSION ~/rpmbuild/BUILD/
    - bash -x ./samba_richacl_build.sh samba-$SAMBAVERSION srpm
    - rpmbuild -bb --define "smbversion $SAMBAVERSION" ~/rpmbuild/SPECS/samba_richacl.spec
    - cp ~/rpmbuild/SRPMS/samba_richacl*.src.rpm ~/rpmbuild/RPMS/x86_64/samba_richacl*rpm RPMS
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - cache/
  artifacts:
    expire_in: 7 days
    paths:
      - RPMS
  tags:
    - docker_node
  dependencies:
    - samba_rpm


# manual cache cleanup (not necessary in normal conditions)
clean_cache:
  when: manual
  stage: .post
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - ls -l cache/
    - rm -rf cache/*
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - cache/
  tags:
    - docker_node


## Publishing, only for tagged builds ##

publish_tagged_rpm:
  stage: publish_rpm
  only:
    - tags
  except:
    - schedules
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - if [ -z "${CI_COMMIT_TAG}" ]; then echo "This is not a tagged commit, exiting"; exit 0; fi
    - yum install -y sudo sssd-client createrepo
    - sudo -u stci -H ./gitlab-ci/publish_rpms.sh
  artifacts:
    expire_in: 7 days
    paths:
      - RPMS
  tags:
    - docker_node
  dependencies:
    - samba_rpm
    - richacl_rpm
